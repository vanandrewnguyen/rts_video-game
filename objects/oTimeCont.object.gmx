<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
global.timeflow = 1;
timeFreezeLength = 60*60;
timeFreezeLengthTotal = timeFreezeLength;

// Draw Var
pauseAlpha = 0;
pauseAlphaTar = 0;
gridSize = 32;

lineY = 0;
lineX = 0;
lineYTar = global.GUIHeight;
lineXTar = global.GUIWidth;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause time
if (keyboard_check_pressed(vk_space)) {
    if (global.timeflow == 0) {
        if (timeFreezeLength &gt; 0) {
            global.timeflow = 1;
        }
    } else {
        global.timeflow = 0;
    }
}

if (timeFreezeLength &lt; 0) { global.timeflow = 1; }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Pause GUI

pauseAlpha = lerp(pauseAlpha, pauseAlphaTar, 0.1);
lineX = lerp(lineX, lineXTar, 0.05);
lineY = lerp(lineY, lineYTar, 0.05);

// Toggle
if (global.timeflow == 1) {
    pauseAlphaTar = 0;
    lineYTar = 0;
    lineXTar = 0;
} else {
    pauseAlphaTar = 1;
    lineYTar = global.GUIHeight;
    lineXTar = global.GUIWidth;
    timeFreezeLength--;
}

/// Blue Rectangle &amp; Grid
draw_set_alpha(pauseAlpha/4);
draw_set_colour(global.colDarkestBlue);
draw_rectangle(0, 0, global.GUIWidth, global.GUIHeight, false);
draw_set_alpha(pauseAlpha/8);
draw_set_colour(c_white);
for (var xx=0;xx&lt;global.GUIWidth;xx+=gridSize) {
    draw_line(xx, 0, xx, lineY+xx/8);
}
for (var yy=0;yy&lt;global.GUIHeight;yy+=gridSize) {
    draw_line(0, yy, lineX+yy/8, yy);
}
draw_set_alpha(pauseAlpha/2);
var width = 128;
var pc = (timeFreezeLength/timeFreezeLengthTotal)*100;
draw_rectangle(global.GUIWidth/2 - width, global.GUIHeight - 32 - 1,
               global.GUIWidth/2 + width, global.GUIHeight - 32 + 2, true);
draw_healthbar(global.GUIWidth/2, global.GUIHeight - 32,
               global.GUIWidth/2 + width, global.GUIHeight - 32 + 2,
               pc, c_white, c_white, c_white, 0,false, true);
draw_healthbar(global.GUIWidth/2, global.GUIHeight - 32,
               global.GUIWidth/2 - width, global.GUIHeight - 32 + 2,
               pc, c_white, c_white, c_white, 0,false, true);

draw_set_alpha(1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Glitch FX
if (global.timeflow == 0) {
    with (oUnitParent) {
        draw_sprite_ext(sprite_index, image_index, x+random_range(-1,1), y+random_range(-1,1), 
                        1, 1, drawAngle+90, c_white, 0.2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
