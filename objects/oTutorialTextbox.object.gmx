<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

txt = "this is a test string";
txtAlpha = 0;
txtAlphaTar = 0;

// Draw Var
t = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
t++;
// Grab distance to set alpha
var dis = point_distance(x, y, mouse_x, mouse_y);
txtAlpha = lerp(txtAlpha, txtAlphaTar, 0.1);

// Set target alpha
if (dis &lt; view_wview[0]/8) {
    txtAlphaTar = 1;
} else {
    txtAlphaTar = 0;
}

// Draw circle radius
draw_set_alpha((1 - txtAlpha) * 0.6);
draw_circle(x, y, 2, false);
draw_circle(x, y, 16 + 4*sin(t / 32), true);
draw_circle(x, y, 24 + 4*sin(t / 36), true);

// Draw box, then text
var strWidth = string_width(txt);
var strHeight = 8;
var pad = 4;

draw_set_alpha(txtAlpha/2);
draw_set_colour(global.colDarkestBlue);
draw_roundrect(x - strWidth/2 - pad, y - strHeight, x + strWidth/2 + pad, y + strHeight, false);
draw_set_colour(c_white);
draw_set_alpha(txtAlpha);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fntMed);
draw_text(x, y, txt);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_alpha(1.0);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
