<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerCarrierShip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

// Menu Var
plotIndex = 0;
var sideGap = 64;
var sx = sideGap;
var sy = room_height/2;
var ex = room_width-sideGap;
var dy = 12; // jump height
var totalDis = abs(sx-ex); //start x - end x
var numRooms = 6+1;
var incDis = totalDis/numRooms;

// Set Coords
plotLength = numRooms+1;

for (var i=0;i&lt;plotLength;i++) {
    plot[i, 0] = sx+incDis*i;
    var dif = 0;
    if (i &gt; 0 &amp;&amp; i != plotLength-1) {
        if (i % 2 == 0) { dif = 1; } else { dif = -1; }
    }
    plot[i, 1] = sy + dif*dy;
}
plot[plotLength, 0] = ex;
plot[plotLength, 1] = sy;

// Set Names
plot[0, 2] = "Sol";
plot[1, 2] = "Gliese";
plot[2, 2] = "Leonis";
plot[3, 2] = "Altair";
plot[4, 2] = "Capirica";
plot[5, 2] = "Stein";
plot[6, 2] = "Sigma";
plot[7, 2] = "Pegasi";
// Set Destinations
plot[0, 3] = rmMainMenu;
plot[1, 3] = rmArenaBasic;
plot[2, 3] = rmArenaBasicExt;
plot[3, 3] = rmArenaDoublePass;
plot[4, 3] = rmArenaMinimal;
plot[5, 3] = rmArenaDuo;
plot[6, 3] = rmArenaQuadFlank;
plot[7, 3] = rmArenaDuoFlank;

// Draw Var
drawAngle = 0;
drawAngleTar = 0;
xScale = 1;
yScale = 1;
shipX = plot[0, 0];
shipY = plot[0, 1];
t = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if (mouse_wheel_up()) { 
    // Audio
    scrPlayAudio(oAudioCont.audioEmUI, sndButtonPress1, 
                 0.9, 1.1, 0.9, 1.1, x, y, 3);
    plotIndex++; 
}
if (mouse_wheel_down()) { 
    // Audio
    scrPlayAudio(oAudioCont.audioEmUI, sndButtonPress1, 
                 0.9, 1.1, 0.9, 1.1, x, y, 3);
    plotIndex--; 
}
plotIndex = clamp(plotIndex, 0, plotLength-1);

if (mouse_check_button_pressed(mb_left)) {
    if (plot[plotIndex, 3] != noone) {
        room_goto(plot[plotIndex, 3]);
    }   
    // Audio
    scrPlayAudio(oAudioCont.audioEmUI, sndButtonPress1, 
                 0.5, 0.6, 0.9, 1.1, x, y, 3);
}

drawAngle += sin(degtorad(drawAngleTar - drawAngle)) * 5;
shipX = lerp(shipX, plot[plotIndex, 0], 0.2);
shipY = lerp(shipY, plot[plotIndex, 1], 0.2);

// BG
background_alpha[1] = 0.75;
background_alpha[2] = 0.25;
background_alpha[3] = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
t++;
if (plotIndex &lt; plotLength) {
    drawAngleTar = point_direction(plot[plotIndex, 0],
                                   plot[plotIndex, 1],
                                   plot[plotIndex+1, 0],
                                   plot[plotIndex+1, 1]);
}

draw_set_colour(c_white);
for (var i=0;i&lt;plotIndex;i++) {
    draw_line_width(plot[i, 0],
                    plot[i, 1],
                    plot[i+1, 0],
                    plot[i+1, 1], 2 + i/6 + 0.25*sin(t / 32));
}
for (var i=0;i&lt;plotLength;i++) {
    var rad = 5 + 2*sin(t / 32);
    var radB = 10 + 2*sin(t / 48);
    draw_circle(plot[i, 0], plot[i, 1], 2, false);
    draw_circle(plot[i, 0], plot[i, 1], rad, true);
    if (i &gt;= plotIndex) {
        draw_circle(plot[i, 0], plot[i, 1], radB, true);
    }   
    
    // Draw Name
    draw_set_colour(c_white);
    if (i == plotIndex) {
        draw_set_halign(fa_center);
        draw_set_font(fntMed);
        draw_text(plot[i, 0], plot[i, 1] + 24 + 4*sin(t / 32), plot[i, 2]);
        draw_set_halign(fa_left);
    }
}

draw_sprite_ext(sprite_index, image_index, shipX, shipY, 
                xScale, yScale, drawAngle+90, c_white, 1);

//draw_text(32,64,string(plotIndex) + "/"+string(plotLength));
//draw_text(mouse_x-32, mouse_y-16, "x: "+string(mouse_x)+" / y: "+string(mouse_y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
