<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTransitionSquareTile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
t = 0;
alpha = 0;
fade = 1;
fadeRate = 0.05/4;
col = global.colDarkestBlue;
image_speed = IMGSPD*0.75;

roomTarget = -1;

drawPattern = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move

// Clamp alpha
alpha = clamp(alpha + (fade * fadeRate), 0, 1);

// Transition
if (alpha == 1) {
    room_goto(roomTarget);
    fade = -1;
}

if ((alpha == 0) &amp;&amp; (fade == -1)) {
    instance_destroy();
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
t++;
draw_set_colour(col);
draw_set_alpha(alpha);

// Define coords
var x1 = view_xview[0];
var y1 = view_yview[0];
var x2 = view_xview[0] + view_wview[0];
var y2 = view_yview[0] + view_hview[0];
var inc = sprite_width;

// Draw rectangle
draw_rectangle(x1, y1, x2, y2, false);

// Draw shifting patterns
draw_set_alpha(alpha*0.75);
for (var i=inc/2;i&lt;(x2-x1);i+=inc) {
    for (var j=inc/2;j&lt;(y2-y1);j+=inc) {
        var xx = x1+i + 4*sin(i + t / 8);
        var yy = y1+j + 4*cos(j + t / 8);
        draw_sprite(sprite_index, image_index + (i+j*2)/inc, xx, yy);
    }
}

draw_set_alpha(1.0);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
