<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPartShipGib</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

// Declare movement vars
hsp = 0;
vsp = 0;
spd = 0;
dir = 0;
fric = 0;
rotSpd = 8;
rotSign = choose(-1, 1);
endAlpha = random_range(0.3, 0.5);

// Sprite variables
image_angle = irandom(360);
image_speed = 0;
image_index = irandom(image_number);
image_alpha = random_range(0.8, 0.9);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move

if (global.timeflow == 1) {
    // Add motion
    hsp += lengthdir_x(spd, dir);
    vsp += lengthdir_y(spd, dir);
    image_angle += rotSign * rotSpd;
    
    // Apply gradual slowdown
    rotSpd = scrApproach(rotSpd, 0, fric*2);
    hsp = lerp(hsp, 0, fric);
    vsp = lerp(vsp, 0, fric);
    spd = scrApproach(spd, 0, fric);
    image_alpha = lerp(image_alpha, endAlpha, 0.1);
    
    x += hsp;
    y += vsp;
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEntityParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

if (global.timeflow == 1) {
    // Push away from other ship
    var cdir = point_direction(other.x, other.y, x, y);
    hsp += lengthdir_x(fric*2, cdir);
    vsp += lengthdir_y(fric*2, cdir);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
