<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
txt = "Sol System";

font = fntTitle;
charWidth = 12;

tx = room_width/2;
ty = room_height/2 - 64;
t = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
t++;

draw_set_font(font);

// Loop through characters and draw them at offsets for some interesting patterns
var strlen = string_length(txt);
var totalWidth = strlen*charWidth;
for (var i=1;i&lt;strlen+1;i++) {
    var baseX = tx + charWidth*i - totalWidth/2;
    var baseY = ty;    
    // Create the offsets
    var x1 = baseX + (2 * sin(i + t / 16));
    var y1 = baseY + (2 * cos(i + t / 20));
    var x2 = baseX + (2 * sin(i - 1 + t / 16));
    var y2 = baseY + (2 * cos(i - 1 + t / 20));
    var x3 = baseX + (2 * sin(i - 2 + t / 16));
    var y3 = baseY + (2 * cos(i - 2 + t / 20));
    // Then draw the text at different coords and colours
    draw_set_colour(global.colDarkPink);
    draw_text(x3, y3, string_char_at(txt, i));
    draw_set_colour(global.colLightPink);
    draw_text(x2, y2, string_char_at(txt, i));
    draw_set_colour(c_white);
    draw_text(x1, y1, string_char_at(txt, i));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
